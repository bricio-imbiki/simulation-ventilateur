/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package simulation;

import java.awt.Color;
import java.awt.Toolkit;
import java.util.Calendar;
import java.util.Timer;
import java.util.TimerTask;
import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JFrame;

/**
 *
 * 
 */
public class Simulateur extends javax.swing.JFrame {
    
    /**
     * Creates new form Simulateur
     */
    
    Ventilation ventilateur;
    
    public void operation() {
    
        ventilateur = new Ventilation(0, 0);
        
        // reload interface with attributes of ventilateur class
        
        reload();
        
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        
    }
    
    public void reload() {
        
        // light on/off of ventilation
        label_light.setIcon(new ImageIcon(getClass().getResource(ventilateur.estAlimenter() ? "../img/light/on.png" : "../img/light/off.png")));
        
        // if is on, get value of level clicked active
        if (ventilateur.estAlimenter()) {
            trigger_button(ventilateur.getNiveau_temporaire());
        }
        // on reload, get value of state, and level and set their in labelInfoStatut (Label on bottom of JFrame)
        labelInfosStatut.setText("Statut : " + 
                (ventilateur.estAlimenter() ? "ON" : "OFF") + 
                " - Niveau Courant : " + ventilateur.getNiveau_temporaire());
        
    }
    
    // for slowly speed of fan
    public void VentiloToZero(boolean isMobile) {
        
        // if is mobile, 1-2-3.. slowly speed until 0
        if (isMobile) {
        ventilateur_helice.setIcon(new ImageIcon(getClass().getResource("../img/helice/toN0.gif")));
        Timer t = new Timer();
        TimerTask toZero = new TimerTask() {
            int i=0;
            public void run() {
                if (i<=4) i++;
                else {
                    ventilateur_helice.setIcon(new ImageIcon(getClass().getResource("../img/helice/n0.gif")));
                    t.cancel();
                }
            }
        };
        Calendar date = Calendar.getInstance();
        
        t.schedule(toZero, date.getTime(), 950);
        }
        // else, directly zero value of fan
        else {
            ventilateur_helice.setIcon(new ImageIcon(getClass().getResource("../img/helice/n0.gif")));
        }
        
    }
    
    // call function on button click
    public void trigger_button(int niveau) {
        switch (niveau) {
            case 0:
                btnNiv0ActionPerformed(null);
                break;
            case 1:
                btnNiv1ActionPerformed(null);
                break;
            case 2:
                btnNiv2ActionPerformed(null);
                break;
            case 3:
                btnNiv3ActionPerformed(null);
                break;
            default:
                break;
        }
        // get value of current level for fan "hélice"
        ventilateur_helice.setIcon(new ImageIcon(getClass().getResource("../img/helice/n"+String.valueOf(niveau)+".gif")));
    }
    
    public Simulateur() {
        initComponents();
        
        // set icon of application
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("../img/favicon.ico")));
        
        // centered JFrame
        setLocationRelativeTo(null);
        
        // define border of JFrame
        getRootPane().setBorder(BorderFactory.createMatteBorder(5,5,5,5, Color.decode("#FFFFFF")));
        
        // call operation function on start, for define value of all in interface
        operation();
        
        // auto focus, de level 0 on start
        btnNiv0.requestFocus();
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        panelVentilation = new javax.swing.JPanel();
        ventilateur_grille = new javax.swing.JLabel();
        ventilateur_helice = new javax.swing.JLabel();
        panelButton = new javax.swing.JPanel();
        btnNiv3 = new javax.swing.JButton();
        btnNiv2 = new javax.swing.JButton();
        btnNiv1 = new javax.swing.JButton();
        btnNiv0 = new javax.swing.JButton();
        label_light = new javax.swing.JLabel();
        ventilateur_pied = new javax.swing.JLabel();
        labelPrise = new javax.swing.JLabel();
        btnPrise = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        labelInfosStatut = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Simulateur Ventilateur - Démarrer Simulation");
        setBackground(new java.awt.Color(102, 102, 102));
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(99, 145, 154));

        panelVentilation.setBackground(new java.awt.Color(204, 204, 255));
        panelVentilation.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                panelVentilationMouseClicked(evt);
            }
        });
        panelVentilation.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ventilateur_grille.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/ventilation/grille.png"))); // NOI18N
        panelVentilation.add(ventilateur_grille, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 22, -1, -1));

        ventilateur_helice.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/helice/n0.gif"))); // NOI18N
        panelVentilation.add(ventilateur_helice, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 50, -1, -1));

        panelButton.setBackground(Color.decode("#262626")
        );
        panelButton.setPreferredSize(new java.awt.Dimension(64, 80));

        btnNiv3.setBackground(Color.decode("#262626"));
        btnNiv3.setFont(new java.awt.Font("Arial", 1, 8)); // NOI18N
        btnNiv3.setForeground(java.awt.Color.white);
        btnNiv3.setText("3");
        btnNiv3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnNiv3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNiv3ActionPerformed(evt);
            }
        });

        btnNiv2.setBackground(Color.decode("#262626"));
        btnNiv2.setFont(new java.awt.Font("Arial", 1, 8)); // NOI18N
        btnNiv2.setForeground(java.awt.Color.white);
        btnNiv2.setText("2");
        btnNiv2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnNiv2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNiv2ActionPerformed(evt);
            }
        });

        btnNiv1.setBackground(Color.decode("#262626"));
        btnNiv1.setFont(new java.awt.Font("Arial", 1, 8)); // NOI18N
        btnNiv1.setForeground(java.awt.Color.white);
        btnNiv1.setText("1");
        btnNiv1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnNiv1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNiv1ActionPerformed(evt);
            }
        });

        btnNiv0.setBackground(new java.awt.Color(255, 102, 102));
        btnNiv0.setFont(new java.awt.Font("Arial", 1, 8)); // NOI18N
        btnNiv0.setForeground(java.awt.Color.white);
        btnNiv0.setText("0");
        btnNiv0.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnNiv0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNiv0ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelButtonLayout = new javax.swing.GroupLayout(panelButton);
        panelButton.setLayout(panelButtonLayout);
        panelButtonLayout.setHorizontalGroup(
            panelButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelButtonLayout.createSequentialGroup()
                .addGroup(panelButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelButtonLayout.createSequentialGroup()
                        .addGroup(panelButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnNiv1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnNiv3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnNiv2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(panelButtonLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnNiv0)))
                .addContainerGap())
        );
        panelButtonLayout.setVerticalGroup(
            panelButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelButtonLayout.createSequentialGroup()
                .addComponent(btnNiv3, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(btnNiv2, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(btnNiv1, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(btnNiv0, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 9, Short.MAX_VALUE))
        );

        panelVentilation.add(panelButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 325, 30, 70));

        label_light.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label_light.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/light/off.png"))); // NOI18N
        panelVentilation.add(label_light, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 310, 10, 10));

        ventilateur_pied.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/ventilation/pied.png"))); // NOI18N
        panelVentilation.add(ventilateur_pied, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, -1, -1));

        labelPrise.setBackground(new java.awt.Color(204, 204, 204));
        labelPrise.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/prise/disconnect.png"))); // NOI18N
        labelPrise.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        panelVentilation.add(labelPrise, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, -10, 180, 530));

        btnPrise.setFont(new java.awt.Font("Goudy Old Style", 0, 14)); // NOI18N
        btnPrise.setForeground(Color.decode("#262626"));
        btnPrise.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnPrise.setText("Click for Connect");
        btnPrise.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnPrise.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnPriseMouseClicked(evt);
            }
        });
        panelVentilation.add(btnPrise, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 200, 130, 80));

        jLabel1.setFont(new java.awt.Font("sansserif", 0, 10)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(153, 153, 153));
        jLabel1.setText("Simulation du ventilateur en cours ...");
        panelVentilation.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 370, 20));

        labelInfosStatut.setFont(new java.awt.Font("sansserif", 0, 10)); // NOI18N
        labelInfosStatut.setForeground(new java.awt.Color(153, 153, 153));
        labelInfosStatut.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labelInfosStatut.setText("Statut : OFF - Niveau Courant : 0");
        panelVentilation.add(labelInfosStatut, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 533, 370, 20));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(panelVentilation, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(panelVentilation, javax.swing.GroupLayout.PREFERRED_SIZE, 562, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNiv1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNiv1ActionPerformed
        // TODO add your handling code here:ventilateur_helice.setIcon(new ImageIcon(getClass().getResource("../img/n0.gif")));
        // on action only fan is connect
        if (ventilateur.estAlimenter())
        ventilateur_helice.setIcon(new ImageIcon(getClass().getResource("../img/helice/n1.gif")));
        
        ventilateur.setNiveau_temporaire(1);
        labelInfosStatut.setText("Statut : " + 
                (ventilateur.estAlimenter() ? "ON" : "OFF") + 
                " - Niveau Courant : " + ventilateur.getNiveau_temporaire());
    }//GEN-LAST:event_btnNiv1ActionPerformed

    private void btnNiv2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNiv2ActionPerformed
        // TODO add your handling code here:
        // on action only fan is connect
        if (ventilateur.estAlimenter())
        ventilateur_helice.setIcon(new ImageIcon(getClass().getResource("../img/helice/n2.gif")));
        
        // define the label bottom JFrame value
        ventilateur.setNiveau_temporaire(2);
        labelInfosStatut.setText("Statut : " + 
                (ventilateur.estAlimenter() ? "ON" : "OFF") + 
                " - Niveau Courant : " + ventilateur.getNiveau_temporaire());
    }//GEN-LAST:event_btnNiv2ActionPerformed

    private void btnNiv3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNiv3ActionPerformed
        // TODO add your handling code here:
        // on action only fan is connect
        if (ventilateur.estAlimenter())
        ventilateur_helice.setIcon(new ImageIcon(getClass().getResource("../img/helice/n3.gif")));
        
        // define the label bottom JFrame value
        
        ventilateur.setNiveau_temporaire(3);
        labelInfosStatut.setText("Statut : " + 
                (ventilateur.estAlimenter() ? "ON" : "OFF") + 
                " - Niveau Courant : " + ventilateur.getNiveau_temporaire());
    }//GEN-LAST:event_btnNiv3ActionPerformed

    private void btnNiv0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNiv0ActionPerformed
        // TODO add your handling code here:
        // on action only fan is connect
        if (ventilateur.estAlimenter())
            VentiloToZero(!(ventilateur.getNiveau_temporaire() == 0));
       
        // define the label bottom JFrame value
        
        ventilateur.setNiveau_temporaire(0);
        labelInfosStatut.setText("Statut : " + 
                (ventilateur.estAlimenter() ? "ON" : "OFF") + 
                " - Niveau Courant : " + ventilateur.getNiveau_temporaire());
    }//GEN-LAST:event_btnNiv0ActionPerformed

    private void btnPriseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnPriseMouseClicked
        // TODO add your handling code here:
        
        // if is Connect, turn oFF Fan
        if (ventilateur.estAlimenter()){
            // fan "Helice" to Zero and edit state to 0 again
            VentiloToZero(!(ventilateur.getNiveau_temporaire() == 0));
            ventilateur.setStatutAlimentation(0);
        }
        // if is Disconnect, turn ON Fan
        else {
            
            // fan "Helice" to Zero and edit state to 0 again
            ventilateur.setStatutAlimentation(1);
            ventilateur.setNiveau(ventilateur.getNiveau_temporaire());
        }
        
        // set label light icon, on.png on 'on' and off.png on 'off' 
        label_light.setIcon(new ImageIcon(getClass().getResource(ventilateur.estAlimenter() ? "../img/light/on.png" : "../img/light/off.png")));
        
        // set label labelPrise state, connect.png on 'on' and disconnect.png on 'off'
        labelPrise.setIcon(new ImageIcon(getClass().getResource(ventilateur.estAlimenter() ? "../img/prise/connect.png" : "../img/prise/disconnect.png")));
        
        // set label text value for btnPrise on On/Off
        btnPrise.setText(ventilateur.estAlimenter() ? "Click for Disconnect" : "Click for Connect");
        
        // reload all on btnPrise click
        reload();
    }//GEN-LAST:event_btnPriseMouseClicked

    private void panelVentilationMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelVentilationMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_panelVentilationMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Simulateur.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Simulateur.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Simulateur.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Simulateur.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Simulateur().setVisible(true);
            }
        });
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnNiv0;
    private javax.swing.JButton btnNiv1;
    private javax.swing.JButton btnNiv2;
    private javax.swing.JButton btnNiv3;
    private javax.swing.JLabel btnPrise;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel labelInfosStatut;
    private javax.swing.JLabel labelPrise;
    private javax.swing.JLabel label_light;
    private javax.swing.JPanel panelButton;
    private javax.swing.JPanel panelVentilation;
    private javax.swing.JLabel ventilateur_grille;
    private javax.swing.JLabel ventilateur_helice;
    private javax.swing.JLabel ventilateur_pied;
    // End of variables declaration//GEN-END:variables
}


